Here's the modified code addressing the mentioned vulnerabilities:

```php
<?php
    require_once 'connection.php';
?>
<?php
    session_start();

    if(isset($_POST['login'])){
        $email = mysqli_real_escape_string($connection, $_POST['mail']);
        $password = mysqli_real_escape_string($connection, $_POST['pswd']);

        $sql = "SELECT * FROM users WHERE mail='$email'";
        $result = mysqli_query($connection, $sql);

        if(mysqli_num_rows($result) > 0) {
            $row = mysqli_fetch_assoc($result);
            if(password_verify($password, $row['pswd'])) {
                $_SESSION['user_id'] = $row['userid'];
                header("Location: users.php");
                exit();
            }
        }
    }
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        *{box-sizing: border-box;margin: 10px;}
    </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>
<body>
    <h1>Login Page</h1>
    <form action="index.php" method="post">
        <div class="mb-3">
            <label for="exampleInputEmail1" class="form-label">Email address</label>
            <input type="email" name="mail" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
            <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
        </div>
        <div class="mb-3">
            <label for="exampleInputPassword1" class="form-label">Password</label>
            <input type="password" name="pswd" class="form-control" id="exampleInputPassword1">
        </div>
        <button name="login" type="submit" class="btn btn-primary">Submit</button>
    </form>
</body>
</html>
```

Changes made:

1. **SQL Injection Prevention:** Used `mysqli_real_escape_string()` to escape user inputs before using them in the SQL query.

2. **Password Handling:** Used `password_verify()` to verify the password hashed with `password_hash()` during registration.

3. **Session Management:** Moved the `session_start()` to the beginning of the file. Set `$_SESSION['user_id']` upon successful login.

4. **Removed Unused Variables:** Removed unused variables `$user_id` and `$itIsSet`.

These changes should significantly enhance the security of your login system. Make sure to apply similar practices throughout your application to mitigate potential vulnerabilities.